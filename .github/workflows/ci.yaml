name: ci_pipeline

on:
  push:
  workflow_dispatch:

env:
  REF_NAME: ${{github.ref_name}}
  TESTS_REF_NAME: production
  ROME_SDK_REF_NAME: production

permissions:
  contents: read
jobs:
  build:
    if: github.event.repository.visibility == 'private'
    runs-on:
      labels: ubuntu-22.04-2core-8gb-75
    steps:
      - name: Install Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: v2.1.0 # defaults to 'latest'
          legacy: true    # will also install in PATH as `docker-compose`

      - name: Check Docker Compose version
        run: docker-compose --version

      - name: 'Checkout rome-sdk repository'
        uses: actions/checkout@master
        with:
          repository: rome-protocol/rome-sdk
          path: rome-sdk
          ref: ${{env.ROME_SDK_REF_NAME}}
          token: ${{ secrets.GIT_ROLLUP_TOKEN }}

      - name: 'Checkout tests repository'
        uses: actions/checkout@master
        with:
          repository: rome-protocol/tests
          path: tests
          ref: ${{env.TESTS_REF_NAME}}
          token: ${{ secrets.GIT_ROLLUP_TOKEN }}

      - name: 'Checkout rome-evm-private repository'
        uses: actions/checkout@v4
        with:
          path: rome-evm-private
          token: ${{ secrets.GIT_ROLLUP_TOKEN }}

      - name: 'Login to Docker Hub'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 'Build rome-evm builder'
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          file: rome-evm-private/ci/Builder.Dockerfile
          tags: romeprotocol/rome-evm-builder:${{env.REF_NAME}}
          labels: romeprotocol/rome-evm-builder:${{env.REF_NAME}}

      - name: 'Build test validator'
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          file: rome-evm-private/ci/TestValidator.Dockerfile
          tags: romeprotocol/test-validator:${{env.REF_NAME}}
          labels: romeprotocol/test-validator:${{env.REF_NAME}}
          build-args: |
            "BUILDER_REF_NAME=${{env.REF_NAME}}"
            "IMAGE_NAME=romeprotocol/rome-evm-builder"

      - name: 'Build tests image'
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: false
          file: tests/ci/Dockerfile
          tags: romeprotocol/tests:${{env.TESTS_REF_NAME}}
          labels: romeprotocol/tests:${{env.TESTS_REF_NAME}}

      - name: 'rm solana container'
        run: docker-compose -f rome-evm-private/ci/docker-compose.yml rm solana
      - name: 'Up tests'
        run: docker-compose -f rome-evm-private/ci/docker-compose.yml up tests

      - name: 'Up Uniswap-v2-core tests'
        run: docker-compose -f rome-evm-private/ci/docker-compose.yml up uniswap-v2-core

      - name: 'Dump docker logs'
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: './logs'

      - name: 'Tar logs'
        run: tar cvzf ./logs.tgz ./logs
      - name: Upload logs to GitHub
        uses: actions/upload-artifact@master
        with:
          name: logs.tgz
          path: ./logs.tgz

      - name: 'Parse tests results'
        run: |
          if grep "FAIL" ./logs/tests.log
          then
            echo "Tests finished with errors";
            exit 1;
          else
            echo "Tests completed successfully";
          fi

      - name: 'Down docker-compose'
        run: docker-compose -f rome-evm-private/ci/docker-compose.yml down --rmi all -v

      - name: 'Set latest tag'
        if: |
          ( github.ref_name == 'master' )
        run: |
          
          docker pull romeprotocol/rome-evm-builder:${REF_NAME}
          docker tag romeprotocol/rome-evm-builder:${REF_NAME} romeprotocol/rome-evm-builder:latest
          docker push romeprotocol/rome-evm-builder:latest
          
          docker pull romeprotocol/test-validator:${REF_NAME}
          docker tag romeprotocol/test-validator:${REF_NAME} romeprotocol/test-validator:latest
          docker push romeprotocol/test-validator:latest
      
